<views:SpeaderBasePage x:Class="Speader.Views.Sources.PocketView"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:behaviours="using:Speader.Behaviours"
                        xmlns:controls="using:Speader.Controls"
                        xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:data="using:Telerik.UI.Xaml.Controls.Data"
                        xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                        xmlns:local="using:Speader.Views"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:views="using:Speader.Views"
                        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                        DataContext="{Binding Pocket,
                                              Source={StaticResource Locator}}"
                        mc:Ignorable="d">
    <interactivity:Interaction.Behaviors>
        <behaviours:StatusBarBehavior IsIndeterminate="{Binding ProgressIsVisible}"
                                      ProgressIsVisible="{Binding ProgressIsVisible}"
                                      Text="{Binding ProgressText}" />
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding ViewLoadedCommand}" />
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid Margin="19,32,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition />
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid Margin="-2000,-2000,0,0">
            <controls:SourceTile x:Name="NormalTileImage" />
            <controls:SourceTile x:Name="TransparentTileImage" />
        </Grid>
        <TextBlock Grid.Row="0"
                   Style="{StaticResource BaseTextBlockStyle}"
                   Text="{Binding Auth.LoggedInPocketUser.Username,
                                  Source={StaticResource Locator}}" />

        <data:RadDataBoundListBox x:Name="BoundListBox"
                                  Grid.Row="1"
                                  EmptyContentTemplate="{StaticResource EmptyContentTemplate}"
                                  IsAsyncBalanceEnabled="True"
                                  IsPullToRefreshEnabled="True"
                                  ItemsSource="{Binding Items}"
                                  ShowPullToRefreshWhenNoData="True">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="RefreshRequested">
                    <core:InvokeCommandAction Command="{Binding RefreshCommand}" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <data:RadDataBoundListBox.ItemTemplate>
                <DataTemplate>
                    <controls:ReaderItemControl ArchiveCommand="{Binding Pocket.ArchiveCommand,
                                                                         Source={StaticResource Locator}}"
                                                FullPageCommand="{Binding Pocket.FullPageCommand,
                                                                          Source={StaticResource Locator}}"
                                                IsArchive="True"
                                                ReaderCommand="{Binding Pocket.ReaderPageCommand,
                                                                        Source={StaticResource Locator}}" />
                </DataTemplate>
            </data:RadDataBoundListBox.ItemTemplate>
        </data:RadDataBoundListBox>
    </Grid>

    <views:SpeaderBasePage.BottomAppBar>
        <controls:SpeaderCommandBar>
            <controls:SpeaderCommandBar.PrimaryCommands>
                <AppBarButton Click="ButtonBase_OnClick"
                              Icon="{Binding IsPinned,
                                             Converter={StaticResource PinUnpinConverter}}"
                              Label="{Binding IsPinned,
                                              Converter={StaticResource PinUnpinTextConverter},
                                              FallbackValue=unpin}" />
                <AppBarButton x:Uid="AppBarHome"
                              x:Name="AppBarHome"
                              Click="AppBarHome_OnClick"
                              Label="home"
                              Visibility="Collapsed">
                    <AppBarButton.Icon>
                        <SymbolIcon Symbol="Home" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </controls:SpeaderCommandBar.PrimaryCommands>
        </controls:SpeaderCommandBar>
    </views:SpeaderBasePage.BottomAppBar>
</views:SpeaderBasePage>
